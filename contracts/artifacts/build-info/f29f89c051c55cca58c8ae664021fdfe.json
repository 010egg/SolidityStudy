{
	"id": "f29f89c051c55cca58c8ae664021fdfe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TestStorage.sol": {
				"content": "contract TestStorage {\n    uint256 public val;\n\n    function test() public {\n        val = 123;\n        bytes memory b = \"\";\n        msg.sender.call(b);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/TestStorage.sol": {
				"TestStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "val",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TestStorage.sol\":0:160  contract TestStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TestStorage.sol\":0:160  contract TestStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3c6bb436\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TestStorage.sol\":27:45  uint256 public val */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TestStorage.sol\":52:158  function test() public {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/TestStorage.sol\":27:45  uint256 public val */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/TestStorage.sol\":52:158  function test() public {... */\n    tag_10:\n        /* \"contracts/TestStorage.sol\":91:94  123 */\n      0x7b\n        /* \"contracts/TestStorage.sol\":85:88  val */\n      0x00\n        /* \"contracts/TestStorage.sol\":85:94  val = 123 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TestStorage.sol\":104:118  bytes memory b */\n      0x00\n        /* \"contracts/TestStorage.sol\":104:123  bytes memory b = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/TestStorage.sol\":133:143  msg.sender */\n      caller\n        /* \"contracts/TestStorage.sol\":133:148  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TestStorage.sol\":149:150  b */\n      dup2\n        /* \"contracts/TestStorage.sol\":133:151  msg.sender.call(b) */\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_16\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_15)\n    tag_16:\n      0x60\n      swap2\n      pop\n    tag_15:\n      pop\n      pop\n      pop\n        /* \"contracts/TestStorage.sol\":75:158  {... */\n      pop\n        /* \"contracts/TestStorage.sol\":52:158  function test() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_17:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_18:\n        /* \"#utility.yul\":177:201   */\n      tag_26\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_17\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_28\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_18\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:540   */\n    tag_19:\n        /* \"#utility.yul\":493:499   */\n      0x00\n        /* \"#utility.yul\":527:532   */\n      dup2\n        /* \"#utility.yul\":521:533   */\n      mload\n        /* \"#utility.yul\":511:533   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:693   */\n    tag_20:\n        /* \"#utility.yul\":647:658   */\n      0x00\n        /* \"#utility.yul\":684:687   */\n      dup2\n        /* \"#utility.yul\":669:687   */\n      swap1\n      pop\n        /* \"#utility.yul\":546:693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":699:838   */\n    tag_21:\n        /* \"#utility.yul\":788:794   */\n      dup3\n        /* \"#utility.yul\":783:786   */\n      dup2\n        /* \"#utility.yul\":778:781   */\n      dup4\n        /* \"#utility.yul\":772:795   */\n      mcopy\n        /* \"#utility.yul\":829:830   */\n      0x00\n        /* \"#utility.yul\":820:826   */\n      dup4\n        /* \"#utility.yul\":815:818   */\n      dup4\n        /* \"#utility.yul\":811:827   */\n      add\n        /* \"#utility.yul\":804:831   */\n      mstore\n        /* \"#utility.yul\":699:838   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":844:1230   */\n    tag_22:\n        /* \"#utility.yul\":948:951   */\n      0x00\n        /* \"#utility.yul\":976:1014   */\n      tag_33\n        /* \"#utility.yul\":1008:1013   */\n      dup3\n        /* \"#utility.yul\":976:1014   */\n      tag_19\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1030:1118   */\n      tag_34\n        /* \"#utility.yul\":1111:1117   */\n      dup2\n        /* \"#utility.yul\":1106:1109   */\n      dup6\n        /* \"#utility.yul\":1030:1118   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1023:1118   */\n      swap4\n      pop\n        /* \"#utility.yul\":1127:1192   */\n      tag_35\n        /* \"#utility.yul\":1185:1191   */\n      dup2\n        /* \"#utility.yul\":1180:1183   */\n      dup6\n        /* \"#utility.yul\":1173:1177   */\n      0x20\n        /* \"#utility.yul\":1166:1171   */\n      dup7\n        /* \"#utility.yul\":1162:1178   */\n      add\n        /* \"#utility.yul\":1127:1192   */\n      tag_21\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1217:1223   */\n      dup1\n        /* \"#utility.yul\":1212:1215   */\n      dup5\n        /* \"#utility.yul\":1208:1224   */\n      add\n        /* \"#utility.yul\":1201:1224   */\n      swap2\n      pop\n        /* \"#utility.yul\":952:1230   */\n      pop\n        /* \"#utility.yul\":844:1230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1507   */\n    tag_13:\n        /* \"#utility.yul\":1366:1369   */\n      0x00\n        /* \"#utility.yul\":1388:1481   */\n      tag_37\n        /* \"#utility.yul\":1477:1480   */\n      dup3\n        /* \"#utility.yul\":1468:1474   */\n      dup5\n        /* \"#utility.yul\":1388:1481   */\n      tag_22\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1381:1481   */\n      swap2\n      pop\n        /* \"#utility.yul\":1498:1501   */\n      dup2\n        /* \"#utility.yul\":1491:1501   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122079404d712ec85d5ec9d5a70eb5ae150e41a1ea7d3724900416b9f86b778366ab64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101b68061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633c6bb43614610038578063f8a8fd6d14610056575b5f80fd5b610040610060565b60405161004d91906100ff565b60405180910390f35b61005e610065565b005b5f5481565b607b5f819055505f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff16816040516100a3919061016a565b5f604051808303815f865af19150503d805f81146100dc576040519150601f19603f3d011682016040523d82523d5f602084013e6100e1565b606091505b50505050565b5f819050919050565b6100f9816100e7565b82525050565b5f6020820190506101125f8301846100f0565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61014482610118565b61014e8185610122565b935061015e81856020860161012c565b80840191505092915050565b5f610175828461013a565b91508190509291505056fea264697066735822122079404d712ec85d5ec9d5a70eb5ae150e41a1ea7d3724900416b9f86b778366ab64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x16A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xDC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112 PUSH0 DUP4 ADD DUP5 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144 DUP3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x14E DUP2 DUP6 PUSH2 0x122 JUMP JUMPDEST SWAP4 POP PUSH2 0x15E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175 DUP3 DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x404D712EC85D5EC9D5A70EB5AE150E41A1EA7D3724900416B9F8 PUSH12 0x778366AB64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "0:160:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_22": {
									"entryPoint": 101,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@val_2": {
									"entryPoint": 96,
									"id": 2,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1510:1",
										"nodeType": "YulBlock",
										"src": "0:1510:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "500:40:1",
													"nodeType": "YulBlock",
													"src": "500:40:1",
													"statements": [
														{
															"nativeSrc": "511:22:1",
															"nodeType": "YulAssignment",
															"src": "511:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "527:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "527:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "521:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:5:1"
																},
																"nativeSrc": "521:12:1",
																"nodeType": "YulFunctionCall",
																"src": "521:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "511:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "442:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "483:5:1",
														"nodeType": "YulTypedName",
														"src": "483:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "493:6:1",
														"nodeType": "YulTypedName",
														"src": "493:6:1",
														"type": ""
													}
												],
												"src": "442:98:1"
											},
											{
												"body": {
													"nativeSrc": "659:34:1",
													"nodeType": "YulBlock",
													"src": "659:34:1",
													"statements": [
														{
															"nativeSrc": "669:18:1",
															"nodeType": "YulAssignment",
															"src": "669:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "684:3:1",
																"nodeType": "YulIdentifier",
																"src": "684:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "669:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "669:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "546:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "631:3:1",
														"nodeType": "YulTypedName",
														"src": "631:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "636:6:1",
														"nodeType": "YulTypedName",
														"src": "636:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "647:11:1",
														"nodeType": "YulTypedName",
														"src": "647:11:1",
														"type": ""
													}
												],
												"src": "546:147:1"
											},
											{
												"body": {
													"nativeSrc": "761:77:1",
													"nodeType": "YulBlock",
													"src": "761:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "778:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "778:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "783:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "788:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "788:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "772:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:1"
																},
																"nativeSrc": "772:23:1",
																"nodeType": "YulFunctionCall",
																"src": "772:23:1"
															},
															"nativeSrc": "772:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "772:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "815:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "815:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "820:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "811:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:1"
																		},
																		"nativeSrc": "811:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "811:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "829:1:1",
																		"nodeType": "YulLiteral",
																		"src": "829:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "804:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:1"
																},
																"nativeSrc": "804:27:1",
																"nodeType": "YulFunctionCall",
																"src": "804:27:1"
															},
															"nativeSrc": "804:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "804:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "699:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "743:3:1",
														"nodeType": "YulTypedName",
														"src": "743:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "748:3:1",
														"nodeType": "YulTypedName",
														"src": "748:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "753:6:1",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													}
												],
												"src": "699:139:1"
											},
											{
												"body": {
													"nativeSrc": "952:278:1",
													"nodeType": "YulBlock",
													"src": "952:278:1",
													"statements": [
														{
															"nativeSrc": "962:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "962:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1008:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1008:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "976:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "976:31:1"
																},
																"nativeSrc": "976:38:1",
																"nodeType": "YulFunctionCall",
																"src": "976:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "966:6:1",
																	"nodeType": "YulTypedName",
																	"src": "966:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1023:95:1",
															"nodeType": "YulAssignment",
															"src": "1023:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1106:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1106:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1111:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1111:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1030:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "1030:75:1"
																},
																"nativeSrc": "1030:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1030:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1023:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1166:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1173:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1173:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1162:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:3:1"
																		},
																		"nativeSrc": "1162:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1180:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1180:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1185:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1127:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:34:1"
																},
																"nativeSrc": "1127:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:65:1"
															},
															"nativeSrc": "1127:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:65:1"
														},
														{
															"nativeSrc": "1201:23:1",
															"nodeType": "YulAssignment",
															"src": "1201:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1212:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1212:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1217:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1208:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:1"
																},
																"nativeSrc": "1208:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1208:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1201:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "844:386:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "933:5:1",
														"nodeType": "YulTypedName",
														"src": "933:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "940:3:1",
														"nodeType": "YulTypedName",
														"src": "940:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "948:3:1",
														"nodeType": "YulTypedName",
														"src": "948:3:1",
														"type": ""
													}
												],
												"src": "844:386:1"
											},
											{
												"body": {
													"nativeSrc": "1370:137:1",
													"nodeType": "YulBlock",
													"src": "1370:137:1",
													"statements": [
														{
															"nativeSrc": "1381:100:1",
															"nodeType": "YulAssignment",
															"src": "1381:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1468:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1388:79:1",
																	"nodeType": "YulIdentifier",
																	"src": "1388:79:1"
																},
																"nativeSrc": "1388:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1388:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1381:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1381:3:1"
																}
															]
														},
														{
															"nativeSrc": "1491:10:1",
															"nodeType": "YulAssignment",
															"src": "1491:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1498:3:1",
																"nodeType": "YulIdentifier",
																"src": "1498:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1491:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1236:271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1349:3:1",
														"nodeType": "YulTypedName",
														"src": "1349:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1355:6:1",
														"nodeType": "YulTypedName",
														"src": "1355:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1366:3:1",
														"nodeType": "YulTypedName",
														"src": "1366:3:1",
														"type": ""
													}
												],
												"src": "1236:271:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633c6bb43614610038578063f8a8fd6d14610056575b5f80fd5b610040610060565b60405161004d91906100ff565b60405180910390f35b61005e610065565b005b5f5481565b607b5f819055505f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff16816040516100a3919061016a565b5f604051808303815f865af19150503d805f81146100dc576040519150601f19603f3d011682016040523d82523d5f602084013e6100e1565b606091505b50505050565b5f819050919050565b6100f9816100e7565b82525050565b5f6020820190506101125f8301846100f0565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61014482610118565b61014e8185610122565b935061015e81856020860161012c565b80840191505092915050565b5f610175828461013a565b91508190509291505056fea264697066735822122079404d712ec85d5ec9d5a70eb5ae150e41a1ea7d3724900416b9f86b778366ab64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x16A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xDC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112 PUSH0 DUP4 ADD DUP5 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144 DUP3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x14E DUP2 DUP6 PUSH2 0x122 JUMP JUMPDEST SWAP4 POP PUSH2 0x15E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175 DUP3 DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x404D712EC85D5EC9D5A70EB5AE150E41A1EA7D3724900416B9F8 PUSH12 0x778366AB64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "0:160:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;52:106;;;:::i;:::-;;27:18;;;;:::o;52:106::-;91:3;85;:9;;;;104:14;:19;;;;;;;;;;;;;;133:10;:15;;149:1;133:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;75:83;52:106::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:98::-;493:6;527:5;521:12;511:22;;442:98;;;:::o;546:147::-;647:11;684:3;669:18;;546:147;;;;:::o;699:139::-;788:6;783:3;778;772:23;829:1;820:6;815:3;811:16;804:27;699:139;;;:::o;844:386::-;948:3;976:38;1008:5;976:38;:::i;:::-;1030:88;1111:6;1106:3;1030:88;:::i;:::-;1023:95;;1127:65;1185:6;1180:3;1173:4;1166:5;1162:16;1127:65;:::i;:::-;1217:6;1212:3;1208:16;1201:23;;952:278;844:386;;;;:::o;1236:271::-;1366:3;1388:93;1477:3;1468:6;1388:93;:::i;:::-;1381:100;;1498:3;1491:10;;1236:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87600",
								"executionCost": "133",
								"totalCost": "87733"
							},
							"external": {
								"test()": "infinite",
								"val()": "2402"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 160,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079404d712ec85d5ec9d5a70eb5ae150e41a1ea7d3724900416b9f86b778366ab64736f6c634300081a0033",
									".code": [
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "3C6BB436"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27,
											"end": 45,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27,
											"end": 45,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 52,
											"end": 158,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52,
											"end": 158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 52,
											"end": 158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52,
											"end": 158,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52,
											"end": 158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52,
											"end": 158,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 45,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27,
											"end": 45,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52,
											"end": 158,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 52,
											"end": 158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 94,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 85,
											"end": 88,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 94,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 94,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 94,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 85,
											"end": 94,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 104,
											"end": 123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 143,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 133,
											"end": 148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 133,
											"end": 148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 149,
											"end": 150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 133,
											"end": 151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75,
											"end": 158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52,
											"end": 158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 442,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 699,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 788,
											"end": 794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 778,
											"end": 781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 772,
											"end": 795,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 829,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 804,
											"end": 831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 948,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1008,
											"end": 1013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 976,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1215,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 952,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1477,
											"end": 1480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1388,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/TestStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d",
							"val()": "3c6bb436"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"val\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestStorage.sol\":\"TestStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TestStorage.sol\":{\"keccak256\":\"0x7ad08e507974a928b5ca7bc07764d3710057da5a3a0155bd2dca8b66bde1932e\",\"urls\":[\"bzz-raw://6cc56bfd90d72bb1a77bbe1d65a0533ffe4dbdda96cafc8878e35058d29b7437\",\"dweb:/ipfs/QmeDJFatNdfrpp7KUMkC9hWsaFoo7rtbCMLfZnY1YNgeea\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2,
								"contract": "contracts/TestStorage.sol:TestStorage",
								"label": "val",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/TestStorage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/TestStorage.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> contracts/TestStorage.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/TestStorage.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n --> contracts/TestStorage.sol:7:9:\n  |\n7 |         msg.sender.call(b);\n  |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 151,
					"file": "contracts/TestStorage.sol",
					"start": 133
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/TestStorage.sol": {
				"ast": {
					"absolutePath": "contracts/TestStorage.sol",
					"exportedSymbols": {
						"TestStorage": [
							23
						]
					},
					"id": 24,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "TestStorage",
							"nameLocation": "9:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3c6bb436",
									"id": 2,
									"mutability": "mutable",
									"name": "val",
									"nameLocation": "42:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "27:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "75:83:0",
										"statements": [
											{
												"expression": {
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "85:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313233",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "91:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_123_by_1",
															"typeString": "int_const 123"
														},
														"value": "123"
													},
													"src": "85:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 8,
												"nodeType": "ExpressionStatement",
												"src": "85:9:0"
											},
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "117:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 21,
														"src": "104:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 9,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "104:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": {
													"hexValue": "",
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "121:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "104:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 18,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "149:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"expression": {
																"id": 13,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "133:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "137:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "133:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "144:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "133:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "133:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "133:18:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "61:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75:0:0"
									},
									"scope": 23,
									"src": "52:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 24,
							"src": "0:160:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:161:0"
				},
				"id": 0
			}
		}
	}
}